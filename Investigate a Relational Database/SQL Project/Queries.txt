/* Query 1 - query used for the first insight*/
SELECT category_name,SUM(rental_count) category_count
FROM
	(
	SELECT f.title film_title, cc.name category_name, count(r.rental_id) rental_count
	FROM film f
	JOIN film_category c 
	ON f.film_id = c.film_id
	JOIN category cc
	ON cc.category_id = c.category_id
	JOIN inventory i 
	ON i.film_id=f.film_id
	JOIN rental r
	ON r.inventory_id=i.inventory_id
	GROUP BY 1,2
	HAVING cc.name in ('Animation','Children','Classics','Comedy','Family', 'Music')
	ORDER BY 2,1
	) as sub
GROUP BY 1
ORDER BY 2 DESC;



/* Query 2 - query used for the second insight*/
SELECT category,
       COUNT(CASE WHEN standard_quartile = 1 THEN 1 ELSE NULL END) AS Q_1,
       COUNT(CASE WHEN standard_quartile = 2 THEN 1 ELSE NULL END) AS Q_2,
       COUNT(CASE WHEN standard_quartile = 3 THEN 1 ELSE NULL END) AS Q_3,
       COUNT(CASE WHEN standard_quartile = 4 THEN 1 ELSE NULL END) AS Q_4
FROM (
    SELECT f.title,
           cc.name AS category,
           f.rental_duration,
           NTILE(4) OVER (PARTITION BY AVG(f.rental_duration)) AS standard_quartile
    FROM film f
    JOIN film_category c ON c.film_id = f.film_id
    JOIN category cc ON cc.category_id = c.category_id
    WHERE cc.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
	GRoup BY 1,2,3
) sub1
GROUP BY category
ORDER BY category;



/* Query 3 - query used for the third insight*/
SELECT rental_year, store_id,SUM(Count_rentals)
FROM
		(SELECT DATE_PART ('month', r.rental_date) Rental_month, 
		   DATE_PART ('year', r.rental_date) Rental_year,
		   s.store_id,
			   COUNT(2) as Count_rentals
		FROM rental r
		JOIN store s
		ON r.staff_id=s.manager_staff_id
		GROUP BY 1,2,3
		ORDER BY 2,1, 4 DESC
		)
GROUP BY 1,2
ORDER BY 1,2,3 DESC;



/* Query 4 - query used for the fourth insight*/
SELECT TO_CHAR (pay_month, 'month') month_name, SUM(pay_amount) total_amount
FROM 
	(SELECT DATE_TRUNC('month', p.payment_date)pay_month,
		CONCAT(c.first_name, ' ', c.last_name)fullname,
		count(1) pay_count_per_month,
		SUM(p.amount) pay_amount
	FROM customer c
	JOIN payment p
	on c.customer_id=p.customer_id
	GROUP BY 1,2
	ORDER BY 2,1,4 DESC)
GROUP BY 1 
ORDER BY 2 DESC;